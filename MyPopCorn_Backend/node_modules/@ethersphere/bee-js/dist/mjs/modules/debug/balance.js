import { http } from "../../utils/http.js";
const balancesEndpoint = 'balances';
const consumedEndpoint = 'consumed';
/**
 * Get the balances with all known peers including prepaid services
 *
 * @param requestOptions Options for making requests
 */
export async function getAllBalances(requestOptions) {
  const response = await http(requestOptions, {
    url: balancesEndpoint,
    responseType: 'json'
  });
  return response.data;
}
/**
 * Get the balances with a specific peer including prepaid services
 *
 * @param requestOptions Options for making requests
 * @param address Swarm address of peer
 */
export async function getPeerBalance(requestOptions, address) {
  const response = await http(requestOptions, {
    url: `${balancesEndpoint}/${address}`,
    responseType: 'json'
  });
  return response.data;
}
/**
 * Get the past due consumption balances with all known peers
 *
 * @param requestOptions Options for making requests
 */
export async function getPastDueConsumptionBalances(requestOptions) {
  const response = await http(requestOptions, {
    url: consumedEndpoint,
    responseType: 'json'
  });
  return response.data;
}
/**
 * Get the past due consumption balance with a specific peer
 *
 * @param requestOptions Options for making requests
 * @param address Swarm address of peer
 */
export async function getPastDueConsumptionPeerBalance(requestOptions, address) {
  const response = await http(requestOptions, {
    url: `${consumedEndpoint}/${address}`,
    responseType: 'json'
  });
  return response.data;
}