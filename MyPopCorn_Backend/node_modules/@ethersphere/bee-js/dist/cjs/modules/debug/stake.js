"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRedistributionState = exports.stake = exports.getStake = void 0;
const http_1 = require("../../utils/http");
const STAKE_ENDPOINT = 'stake';
const REDISTRIBUTION_ENDPOINT = 'redistributionstate';
/**
 * Gets the staked amount
 *
 * @param requestOptions Options for making requests
 */
async function getStake(requestOptions) {
    const response = await (0, http_1.http)(requestOptions, {
        method: 'get',
        responseType: 'json',
        url: `${STAKE_ENDPOINT}`,
    });
    return response.data.stakedAmount.toString();
}
exports.getStake = getStake;
/**
 * Stake given amount of tokens.
 *
 * @param requestOptions Options for making requests
 * @param amount
 * @param options
 */
async function stake(requestOptions, amount, options) {
    const headers = {};
    if (options?.gasPrice) {
        headers['gas-price'] = options.gasPrice.toString();
    }
    if (options?.gasLimit) {
        headers['gas-limit'] = options.gasLimit.toString();
    }
    await (0, http_1.http)(requestOptions, {
        method: 'post',
        responseType: 'json',
        url: `${STAKE_ENDPOINT}/${amount}`,
        headers,
    });
}
exports.stake = stake;
/**
 * Get current status of node in redistribution game
 *
 * @param requestOptions Options for making requests
 */
async function getRedistributionState(requestOptions) {
    const response = await (0, http_1.http)(requestOptions, {
        method: 'get',
        responseType: 'json',
        url: REDISTRIBUTION_ENDPOINT,
    });
    return response.data;
}
exports.getRedistributionState = getRedistributionState;
