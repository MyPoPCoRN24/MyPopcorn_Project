"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cancelTransaction = exports.rebroadcastTransaction = exports.getTransaction = exports.getAllTransactions = void 0;
const http_1 = require("../../utils/http");
const transactionsEndpoint = 'transactions';
/**
 * Get list of all pending transactions
 *
 * @param requestOptions Options for making requests
 */
async function getAllTransactions(requestOptions) {
    const response = await (0, http_1.http)(requestOptions, {
        url: transactionsEndpoint,
        responseType: 'json',
    });
    return response.data.pendingTransactions;
}
exports.getAllTransactions = getAllTransactions;
/**
 * Get information for specific pending transactions
 *
 * @param requestOptions Options for making requests
 * @param transactionHash Hash of the transaction
 */
async function getTransaction(requestOptions, transactionHash) {
    const response = await (0, http_1.http)(requestOptions, {
        url: `${transactionsEndpoint}/${transactionHash}`,
        responseType: 'json',
    });
    return response.data;
}
exports.getTransaction = getTransaction;
/**
 * Rebroadcast existing transaction
 *
 * @param requestOptions Options for making requests
 * @param transactionHash Hash of the transaction
 */
async function rebroadcastTransaction(requestOptions, transactionHash) {
    const response = await (0, http_1.http)(requestOptions, {
        method: 'post',
        url: `${transactionsEndpoint}/${transactionHash}`,
        responseType: 'json',
    });
    return response.data.transactionHash;
}
exports.rebroadcastTransaction = rebroadcastTransaction;
/**
 * Cancel existing transaction
 *
 * @param requestOptions Options for making requests
 * @param transactionHash Hash of the transaction
 * @param gasPrice Optional gas price
 */
async function cancelTransaction(requestOptions, transactionHash, gasPrice) {
    const headers = {};
    if (gasPrice) {
        headers['gas-price'] = gasPrice;
    }
    const response = await (0, http_1.http)(requestOptions, {
        method: 'delete',
        headers,
        url: `${transactionsEndpoint}/${transactionHash}`,
        responseType: 'json',
    });
    return response.data.transactionHash;
}
exports.cancelTransaction = cancelTransaction;
