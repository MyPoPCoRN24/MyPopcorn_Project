"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWalletBalance = exports.getChainState = exports.getReserveState = void 0;
const http_1 = require("../../utils/http");
const RESERVE_STATE_ENDPOINT = 'reservestate';
const WALLET_ENDPOINT = 'wallet';
const CHAIN_STATE_ENDPOINT = 'chainstate';
/**
 * Get state of reserve
 *
 * @param requestOptions Options for making requests
 */
async function getReserveState(requestOptions) {
    const response = await (0, http_1.http)(requestOptions, {
        method: 'get',
        url: `${RESERVE_STATE_ENDPOINT}`,
        responseType: 'json',
    });
    return response.data;
}
exports.getReserveState = getReserveState;
/**
 * Get state of reserve
 *
 * @param requestOptions Options for making requests
 */
async function getChainState(requestOptions) {
    const response = await (0, http_1.http)(requestOptions, {
        method: 'get',
        url: `${CHAIN_STATE_ENDPOINT}`,
        responseType: 'json',
    });
    return response.data;
}
exports.getChainState = getChainState;
/**
 * Get wallet balances for xDai and BZZ of the node
 *
 * @param requestOptions Options for making requests
 */
async function getWalletBalance(requestOptions) {
    const response = await (0, http_1.http)(requestOptions, {
        method: 'get',
        url: `${WALLET_ENDPOINT}`,
        responseType: 'json',
    });
    return response.data;
}
exports.getWalletBalance = getWalletBalance;
