"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.http = exports.DEFAULT_HTTP_CONFIG = void 0;
const axios_1 = __importDefault(require("axios"));
const cafe_utility_1 = require("cafe-utility");
const index_1 = require("../index");
const { AxiosError } = axios_1.default;
exports.DEFAULT_HTTP_CONFIG = {
    headers: {
        accept: 'application/json, text/plain, */*',
    },
    maxBodyLength: Infinity,
    maxContentLength: Infinity,
};
/**
 * Main function to make HTTP requests.
 * @param options User defined settings
 * @param config Internal settings and/or Bee settings
 */
async function http(options, config) {
    try {
        const requestConfig = cafe_utility_1.Objects.deepMerge3(exports.DEFAULT_HTTP_CONFIG, config, options);
        maybeRunOnRequestHook(options, requestConfig);
        const response = await (0, axios_1.default)(requestConfig);
        // TODO: https://github.com/axios/axios/pull/6253
        return response;
    }
    catch (e) {
        if (e instanceof AxiosError) {
            throw new index_1.BeeResponseError(e.message, e.status, e.code);
        }
        throw e;
    }
}
exports.http = http;
function maybeRunOnRequestHook(options, requestConfig) {
    if (options.onRequest) {
        options.onRequest({
            method: requestConfig.method || 'GET',
            url: cafe_utility_1.Strings.joinUrl(requestConfig.baseURL, requestConfig.url),
            headers: { ...requestConfig.headers },
            params: requestConfig.params,
        });
    }
}
